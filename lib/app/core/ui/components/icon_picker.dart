import 'package:flutter/material.dart';

Future<IconData?> showIconPicker(
    {required BuildContext context, IconData? defalutIcon, bool isDark = true}) async {
  final List<IconData> allIcons = [
    Icons.card_giftcard,
    Icons.card_membership,
    Icons.credit_card,
    Icons.credit_score,
    Icons.diamond,
    Icons.umbrella_sharp,
    Icons.favorite,
    Icons.headphones,
    Icons.home,
    Icons.car_repair,
    Icons.settings,
    Icons.flight,
    Icons.ac_unit,
    Icons.run_circle,
    Icons.book,
    Icons.sports_rugby_rounded,
    Icons.alarm,
    Icons.call,
    Icons.snowing,
    Icons.hearing,
    Icons.music_note,
    Icons.note,
    Icons.edit,
    Icons.sunny,
    Icons.radar,
    Icons.event,
    Icons.thumb_up,
    Icons.favorite_border,
    Icons.verified,
    Icons.calendar_today,
    Icons.face,
    Icons.favorite,
    Icons.favorite,
    Icons.home,
    Icons.date_range,
    Icons.fact_check,
    Icons.print,
    Icons.store,
    Icons.lock_open,
    Icons.done_all,
    Icons.pending_actions,
    Icons.account_box,
    Icons.payment,
    Icons.assessment,
    Icons.gavel,
    Icons.accessibility,
    Icons.add_task,
    Icons.flutter_dash,
    Icons.copyright,
    Icons.arrow_circle_down,
    Icons.accessible,
    Icons.alarm_on,
    Icons.bookmark_add,
    Icons.history_toggle_off,
    Icons.hide_source,
    Icons.tour,
    Icons.mark_as_unread,
    Icons.donut_small,
    Icons.plagiarism,
    Icons.all_inbox,
    Icons.vertical_split,
    Icons.pregnant_woman,
    Icons.next_plan,
    Icons.data_exploration,
    Icons.restore_from_trash,
    Icons.dynamic_form,
    Icons.tab,
    Icons.lock_reset,
    Icons.alarm_add,
    Icons.backup_table,
    Icons.generating_tokens,
    Icons.view_timeline,
    Icons.event_repeat,
    Icons.shop_two,
    Icons.settings_cell,
    Icons.view_cozy,
    Icons.check,
    Icons.refresh,
    Icons.expand_circle_down,
    Icons.add_home_work,
    Icons.groups,
    Icons.groups_2,
    Icons.people,
    Icons.person_outline,
    Icons.school,
    Icons.construction,
    Icons.travel_explore,
    Icons.emoji_objects,
    Icons.military_tech,
    Icons.notifications_none,
    Icons.emoji_people,
    Icons.location_city,
    Icons.mood,
    Icons.recommend,
    Icons.person_add_alt_1,
    Icons.back_hand,
    Icons.hiking,
    Icons.sports_kabaddi,
    Icons.man,
    Icons.emoji_transportation,
    Icons.sports_handball,
    Icons.sign_language,
    Icons.add_circle,
    Icons.add_circle_outline,
    Icons.calculate,
    Icons.markunread,
    Icons.image,
    Icons.photo_library,
    Icons.receipt_long,
    Icons.picture_as_pdf,
    Icons.auto_stories,
    Icons.cases,
    Icons.brightness_7,
    Icons.assistant_photo,
    Icons.chat_bubble,
    Icons.co_present,
    Icons.person_pin_circle,
    Icons.train,
    Icons.pedal_bike,
    Icons.navigation,
    Icons.hail,
    Icons.add_road,
    Icons.run_circle,
    Icons.file_upload,
    Icons.play_circle_filled,
    Icons.play_circle,
    Icons.videocam,
    Icons.mic,
    Icons.volume_up,
    Icons.speed,
    Icons.movie,
    Icons.playlist_add,
    Icons.stop_circle,
    Icons.videocam_off,
    Icons.queue,
    Icons.playlist_add_check_circle,
    Icons.add_to_queue,
    Icons.star,
    Icons.warning,
    Icons.error_outline,
    Icons.live_tv,
    Icons.ondemand_video,
    Icons.format_list_bulleted,
    Icons.attach_money,
    Icons.monetization_on,
    Icons.post_add,
  ];

  IconData? selectedIcon = defalutIcon;

  await showDialog(
      context: context,
      builder: (_) => AlertDialog(
            title: const Text('Escolha um Ã­cone'),
            content: Container(
              width: 320,
              height: 400,
              alignment: Alignment.center,
              
              child: GridView.builder(
                  gridDelegate: const SliverGridDelegateWithMaxCrossAxisExtent(
                      maxCrossAxisExtent: 60,
                      childAspectRatio: 1 / 1,
                      crossAxisSpacing: 10,
                      mainAxisSpacing: 10),
                  itemCount: allIcons.length,
                  itemBuilder: (_, index) => Container(
                        key: ValueKey(allIcons[index].codePoint),
                        padding: const EdgeInsets.all(10),
                        child: Center(
                          child: IconButton(
                            color: selectedIcon == allIcons[index]
                                ? isDark ? Colors.yellow : Colors.red
                                : isDark ? Colors.blue[100] :Colors.indigo,
                            iconSize:  30,
                            icon: Icon(
                              allIcons[index],
                            ),
                            onPressed: () {
                              selectedIcon = allIcons[index];
                              Navigator.of(context).pop();
                            },
                          ),
                        ),
                      )),
            ),
            actions: [
              ElevatedButton(
                  onPressed: () {
                    Navigator.of(context).pop();
                  },
                  child: const Text('Fechar'))
            ],
          ));

  return selectedIcon;
}
